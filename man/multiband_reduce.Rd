% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multiband_reduce.R, R/multiband_reduce_funs.R
\name{multiband_reduce}
\alias{multiband_reduce}
\alias{geomedian}
\alias{geomedian_weizfeld}
\alias{medoid}
\alias{quantoid}
\alias{geomedoid}
\title{Run composite reductions that require all bands.
\code{multiband_reduce} can be used to create composite reductions that require
all band values, such as tyhe geometric median or medoid.
composite of a warped VRT collection.}
\usage{
multiband_reduce(
  x,
  reduce_fun = vrtility::medoid(),
  outfile = fs::file_temp(ext = "tif"),
  cache_dir = getOption("vrt.cache"),
  config_options = gdal_config_opts(),
  creation_options = gdal_creation_options(),
  quiet = FALSE,
  nsplits = NULL,
  return_internals = FALSE
)

geomedian(nstart = 5, gamma = 10, alpha = 0.65, epsilon = 1e-08)

geomedian_weizfeld(epsilon = 1e-08, nitermax = 1000)

medoid(
  distance_type = c("euclidean", "manhattan", "minimum", "maximum", "minkowski",
    "bhattacharyya", "hellinger", "kullback_leibler", "jensen_shannon", "canberra",
    "chi_square", "soergel", "sorensen", "cosine", "wave_hedges", "motyka",
    "harmonic_mean", "jeffries_matusita", "gower", "kulczynski", "itakura_saito"),
  impute_na = TRUE
)

quantoid(
  distance_type = c("euclidean", "manhattan", "minimum", "maximum", "minkowski",
    "bhattacharyya", "hellinger", "kullback_leibler", "jensen_shannon", "canberra",
    "chi_square", "soergel", "sorensen", "cosine", "wave_hedges", "motyka",
    "harmonic_mean", "jeffries_matusita", "gower", "kulczynski", "itakura_saito"),
  probability = 0.4,
  impute_na = TRUE
)

geomedoid(
  nstart = 50,
  gamma = 15,
  alpha = 0.9,
  distance_type = c("euclidean", "manhattan", "minimum", "maximum", "minkowski",
    "bhattacharyya", "hellinger", "kullback_leibler", "jensen_shannon", "canberra",
    "chi_square", "soergel", "sorensen", "cosine", "wave_hedges", "motyka",
    "harmonic_mean", "jeffries_matusita", "gower", "kulczynski", "itakura_saito"),
  impute_na = TRUE
)
}
\arguments{
\item{x}{A vrt_collection_warped object.}

\item{outfile}{The output file path.}

\item{cache_dir}{The directory to save temporary files. (default should be
fine - this is here mainly for explicit privision for mirai daemons)}

\item{config_options}{A named character vector of GDAL configuration options.}

\item{quiet}{Logical indicating whether to suppress the progress bar.}

\item{return_internals}{Logical indicating whether to return the internals of
the function (e.g., the jobs object) that is produced before promise
evaluation.}

\item{nstart}{Number of times the algorithm is ran over all the data set.}

\item{gamma}{Value (positive) of the constant controling the descent steps
see details in \code{\link[Gmedian]{Gmedian}}.}

\item{alpha}{Rate of decrease of the descent steps (see details). Should
satisfy \eqn{1/2< alpha <= 1}.}

\item{epsilon}{Numerical tolerance. By defaut set to 1e-08.}

\item{nitermax}{Maximum number of iterations.}

\item{distance_type}{The type of distance metric to use. See
\code{\link[Rfast]{dista}} for a full description of options.}

\item{probability}{The probability of the quantile to use. Default is 0.4.}

\item{compression}{The compression method to use for the output file.}
}
\value{
A character vector of the output file path.
}
\description{
Run composite reductions that require all bands.
\code{multiband_reduce} can be used to create composite reductions that require
all band values, such as tyhe geometric median or medoid.
composite of a warped VRT collection.
}
\details{
The \code{geomedian} function wraps \code{\link[Gmedian]{Gmedian}}  and
is identical other than it uses the column medians as the initial
starting value for the algorithm, rather than the first row of the matrix.

The \code{geomedian_weizfeld} function wraps
\code{\link[Gmedian]{Weiszfeld}} and is idential but does not provide support
for weights.

The \code{medoid} function  uses \code{\link[Rfast]{dista}} to compute
the distance between the band-level medians and the values for each pixel. It
then selects the pixel with the minimum distance as the medoid. The returned
band pixel values are spectrally consistent and observed rather than
synthetic.

The quantoid is equivalent to the medoid but uses a specified
quantile value for calculating the distances.

The \code{geomedoid} function combines the \code{geomedian} and \code{medoid} - it
first calculates the geometric median across all bands and then uses this
to determine the nearest pixel value to the geometric median. As the
geometric median has greater resilience to outliers than the band-level
median, this function may selct a medoid value that is less likely to contian
clouds or other outliers. The returned band pixel values are spectrally
consistent.
}
