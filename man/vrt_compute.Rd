% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vrt-compute.R
\name{vrt_compute}
\alias{vrt_compute}
\alias{vrt_compute.vrt_block}
\alias{vrt_compute.vrt_stack_warped}
\alias{vrt_compute.vrt_stack}
\alias{vrt_compute.vrt_collection_warped}
\alias{vrt_compute.vrt_collection}
\title{Generate a composite raster from (virtual) raster sources.}
\usage{
vrt_compute(
  x,
  outfile,
  t_srs,
  te,
  tr,
  resampling,
  engine,
  warp_options,
  creation_options,
  config_options,
  dask_workers,
  add_cl_arg,
  quiet
)

\method{vrt_compute}{vrt_block}(
  x,
  outfile,
  t_srs = x$srs,
  te = x$bbox,
  tr = x$res,
  resampling = c("near", "bilinear", "cubic", "cubicspline", "lanczos", "average", "rms",
    "mode", "max", "min", "med", "q1", "q3", "sum"),
  engine = c("warp", "rioxarray", "translate"),
  warp_options = gdalwarp_options(),
  creation_options = gdal_creation_options(),
  config_options = gdal_config_opts(),
  dask_workers = NULL,
  add_cl_arg = NULL,
  quiet = TRUE
)

\method{vrt_compute}{vrt_stack_warped}(
  x,
  outfile,
  t_srs = x$srs,
  te = x$bbox,
  tr = x$res,
  resampling = c("near", "bilinear", "cubic", "cubicspline", "lanczos", "average", "rms",
    "mode", "max", "min", "med", "q1", "q3", "sum"),
  engine = c("warp", "rioxarray", "translate"),
  warp_options = gdalwarp_options(),
  creation_options = gdal_creation_options(),
  config_options = gdal_config_opts(),
  dask_workers = NULL,
  add_cl_arg = NULL,
  quiet = TRUE
)

\method{vrt_compute}{vrt_stack}(
  x,
  outfile,
  t_srs,
  te,
  tr,
  resampling = c("near", "bilinear", "cubic", "cubicspline", "lanczos", "average", "rms",
    "mode", "max", "min", "med", "q1", "q3", "sum"),
  engine = c("warp", "translate"),
  warp_options = gdalwarp_options(),
  creation_options = gdal_creation_options(),
  config_options = gdal_config_opts(),
  dask_workers = NULL,
  add_cl_arg = NULL,
  quiet = TRUE
)

\method{vrt_compute}{vrt_collection_warped}(
  x,
  outfile,
  t_srs = x$srs,
  te = x$bbox,
  tr = x$res,
  resampling = c("near", "bilinear", "cubic", "cubicspline", "lanczos", "average", "rms",
    "mode", "max", "min", "med", "q1", "q3", "sum"),
  engine = c("warp", "rioxarray", "translate"),
  warp_options = gdalwarp_options(),
  creation_options = gdal_creation_options(),
  config_options = gdal_config_opts(),
  dask_workers = NULL,
  add_cl_arg = NULL,
  quiet = FALSE
)

\method{vrt_compute}{vrt_collection}(
  x,
  outfile,
  t_srs,
  te,
  tr,
  resampling = c("near", "bilinear", "cubic", "cubicspline", "lanczos", "average", "rms",
    "mode", "max", "min", "med", "q1", "q3", "sum"),
  engine = c("warp", "translate"),
  warp_options = gdalwarp_options(),
  creation_options = gdal_creation_options(),
  config_options = gdal_config_opts(),
  dask_workers = NULL,
  add_cl_arg = NULL,
  quiet = FALSE
)
}
\arguments{
\item{x}{A vrt_block, vrt_stack, or vrt_collection object}

\item{outfile}{A character string of the output file path}

\item{t_srs}{A character string of the target SRS}

\item{te}{A numeric vector of the target extent in the form
c(xmin, ymin, xmax, ymax) and must be the same SRS as in \code{t_srs}.}

\item{tr}{A numeric vector of the target resolution in the form c(xres, yres)}

\item{resampling}{A character vector of the resampling method to be used.
see details.}

\item{engine}{A character vector of the engine to use for processing the
raster data. See details.}

\item{warp_options}{A character vector of options to pass to gdalwarp}

\item{creation_options}{A character vector of options to pass to the
the gdal "engine".}

\item{config_options}{A character vector of options to set in the GDAL
environment}

\item{dask_workers}{An integer of the number of dask workers to use when
using the rioxarray engine.}

\item{add_cl_arg}{A character vector of additional command line arguments
that are not captured in \code{gdalwarp_options()} - these are not checked for
validity.}

\item{quiet}{A logical indicating whether to suppress output}
}
\value{
A character string of the path to the output raster
}
\description{
Generate a composite raster from (virtual) raster sources.
}
\details{
The \code{resampling} default is "near", which should be chosen in vrt_warp has
already been used but "bilinear" may be prefereable where the input data is
has not yet been virtually aligned/resampled.

The choice of \code{engine} will depend on the nature of the computation being
carried out. In the majority of cases warping is preferred, especically when
we are not processing the entirity of the input dataset (as is usually the
case when working with online data sources). The \code{rioxarray} engine is
experimental but potentially MUCH faster when working with COGs... Before
using the rioxarray engine, ensure that the VRT collection has been warped
with \code{vrt_warp} before using \code{vrt_stack} or \code{vrt_compute}.
}
