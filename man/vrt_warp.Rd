% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vrt-warp.R
\name{vrt_warp}
\alias{vrt_warp}
\alias{vrt_warp.vrt_block}
\alias{vrt_warp.vrt_collection}
\title{Construct A warped VRT or warped VRT collection.}
\usage{
vrt_warp(x, t_srs, te, tr, resampling, quiet, temp_vrt_dir)

\method{vrt_warp}{vrt_block}(
  x,
  t_srs,
  te,
  tr,
  resampling = c("bilinear", "near", "cubic", "cubicspline", "lanczos", "average", "rms",
    "mode", "max", "min", "med", "q1", "q3", "sum"),
  quiet = TRUE,
  temp_vrt_dir = getOption("vrt.cache")
)

\method{vrt_warp}{vrt_collection}(
  x,
  t_srs,
  te,
  tr,
  resampling = c("bilinear", "near", "cubic", "cubicspline", "lanczos", "average", "rms",
    "mode", "max", "min", "med", "q1", "q3", "sum"),
  quiet = TRUE,
  temp_vrt_dir = getOption("vrt.cache")
)
}
\arguments{
\item{x}{A vrt_collection or vrt_block (most likely the former).}

\item{t_srs}{character target SRS must be a numeric EPSG code, or SRS like
character such as a proj4 string or WKT.}

\item{te}{numeric vector of the target extent in the form
c(xmin, ymin, xmax, ymax) using the same SRS as in \code{t_srs}.}

\item{tr}{numeric vector of the target resolution in the form c(xres, yres)}

\item{resampling}{character vector of the resampling methods to be used for
each band. The default is "bilinear". "near" sampling will be used for the
mask_band if provided.}

\item{quiet}{logical indicating whether to suppress progress bar.}
}
\description{
Construct A warped VRT or warped VRT collection.
}
\details{
This function generates warped VRT objects types. This is
particularly useful when we want to create a vrt_stack but our input images
span multiple spatial reference systems. In such a situation, before warping
our input data we must align with our desired oputput grid.
}
\examples{
s2files <- fs::dir_ls(system.file("s2-data", package = "vrtility"))
ex_collect <- vrt_collect(s2files)
t_block <- ex_collect[[1]][[1]]
vrt_warp(
ex_collect,
   t_srs = t_block$srs,
   te = t_block$bbox,
   tr = t_block$res
 )
}
