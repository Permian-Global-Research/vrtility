% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gdal-options.R
\name{gdal_config_opts}
\alias{gdal_config_opts}
\alias{gdal_creation_options}
\alias{gdalwarp_options}
\alias{set_gdal_config}
\title{Create GDAL configuration options.}
\usage{
gdal_config_opts(
  GDAL_VRT_ENABLE_PYTHON = "YES",
  VSI_CACHE = "TRUE",
  GDAL_CACHEMAX = "50\%",
  VSI_CACHE_SIZE = "268435456",
  GDAL_NUM_THREADS = "ALL_CPUS",
  GDAL_DISABLE_READDIR_ON_OPEN = "EMPTY_DIR",
  GDAL_MAX_DATASET_POOL_SIZE = "500",
  GDAL_INGESTED_BYTES_AT_OPEN = "32000",
  CPL_VSIL_CURL_ALLOWED_EXTENSIONS = ".tif .TIF",
  CPL_VSIL_CURL_USE_HEAD = "NO",
  GDAL_HTTP_MAX_RETRY = "5",
  GDAL_HTTP_RETRY_DELAY = "3",
  GDAL_HTTP_MULTIPLEX = "YES",
  GDAL_HTTP_VERSION = "2",
  GDAL_HTTP_MERGE_CONSECUTIVE_RANGES = "YES",
  ...
)

gdal_creation_options(
  output_format = NULL,
  COMPRESS = "LZW",
  PREDICTOR = "2",
  NUM_THREADS = "ALL_CPUS",
  BIGTIFF = "YES",
  TILED = "YES",
  BLOCKXSIZE = "256",
  BLOCKYSIZE = "256",
  COPY_SRC_OVERVIEWS = "YES",
  ...
)

gdalwarp_options(multi = TRUE, warp_memory = "50\%", num_threads = "ALL_CPUS")

set_gdal_config(x, scope = c("gdalraster", "sys"))
}
\arguments{
\item{GDAL_VRT_ENABLE_PYTHON}{Enable Python this is required for vrtility pixel functions}

\item{VSI_CACHE}{cache related}

\item{GDAL_CACHEMAX}{cache related}

\item{VSI_CACHE_SIZE}{cache related}

\item{GDAL_NUM_THREADS}{General options}

\item{GDAL_DISABLE_READDIR_ON_OPEN}{General options}

\item{GDAL_MAX_DATASET_POOL_SIZE}{General options}

\item{GDAL_INGESTED_BYTES_AT_OPEN}{General options}

\item{CPL_VSIL_CURL_ALLOWED_EXTENSIONS}{Optimize HTTP connections}

\item{CPL_VSIL_CURL_USE_HEAD}{Optimize HTTP connections}

\item{GDAL_HTTP_MAX_RETRY}{Optimize HTTP connections}

\item{GDAL_HTTP_RETRY_DELAY}{Optimize HTTP connections}

\item{GDAL_HTTP_MULTIPLEX}{Optimize HTTP connections}

\item{GDAL_HTTP_VERSION}{General options}

\item{GDAL_HTTP_MERGE_CONSECUTIVE_RANGES}{General options}

\item{...}{Additional -co options to set}

\item{output_format}{Output format equivalent to -of on the CLI. see details}

\item{COMPRESS}{Compression method}

\item{PREDICTOR}{Prediction method}

\item{NUM_THREADS}{Number of threads}

\item{BIGTIFF}{Use BigTIFF}

\item{TILED}{Use tiling}

\item{BLOCKXSIZE}{Block size in X}

\item{BLOCKYSIZE}{Block size in Y}

\item{COPY_SRC_OVERVIEWS}{Copy source overviews}

\item{multi}{Logical indicating whether to use multi-threading, equivalent
to -multi on the CLI}

\item{warp_memory}{Memory to use for warping equivalent to -wm on the CLI}

\item{num_threads}{Number of threads to use for warping equivalent to -wo
NUM_THREADS on the CLI. "ALL_CPUS" (the default) will use all available CPUs,
alternartively an integer can be supplied - or NULL to use a single threaded
process.}

\item{x}{A named character vector of the configuration options}

\item{scope}{A character vector of the scope to set the options in. Either
"gdalraster" or "sys".}
}
\value{
Character vector of options
}
\description{
Create GDAL configuration options.

Create GDAL creation options

Create GDAL warp options

Set the GDAL configuration options
}
\details{
output_format, equaivalent to \code{-of} from the gdaltranslate or gdalwarp CLIs.
If NULL, then the output format will be inferred from the file extension.
}
\examples{
gdal_config_opts(GDAL_HTTP_USERPWD = "user:password")
gdal_creation_options(COMPRESS = "JPEG", JPEG_QUALITY = "90")
gdalwarp_options(multi = TRUE, warp_memory = "50\%", num_threads = 4)
set_gdal_config(gdal_config_opts())
}
\seealso{
\href{https://gdal.org/en/stable/user/configoptions.html}{GDAL Configuration Options}

\href{https://gdal.org/en/stable/drivers/raster/index.html#raster-drivers}{GDAL Raster Drivers}

\href{https://gdal.org/en/stable/programs/gdalwarp.html}{GDAL Warp Options}
}
