% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gdal-options.R
\name{gdal_config_opts}
\alias{gdal_config_opts}
\alias{gdal_creation_options}
\alias{gdalwarp_options}
\alias{set_gdal_config}
\alias{set_gdal_cache_max}
\alias{gdal_raster_drivers}
\alias{check_muparser}
\title{Create and set GDAL configuration options.}
\usage{
gdal_config_opts(
  VSI_CACHE = "TRUE",
  VSI_CACHE_SIZE = "268435456",
  GDAL_NUM_THREADS = "ALL_CPUS",
  GDAL_DISABLE_READDIR_ON_OPEN = "FALSE",
  CPL_VSIL_CURL_CACHE_SIZE = "1342177280",
  GDAL_HTTP_MAX_RETRY = "3",
  GDAL_HTTP_RETRY_DELAY = "5",
  GDAL_HTTP_MULTIPLEX = "YES",
  GDAL_HTTP_VERSION = "2",
  GDAL_HTTP_MERGE_CONSECUTIVE_RANGES = "YES",
  GDAL_HTTP_COOKIEFILE = "~/.cookies.txt",
  GDAL_HTTP_COOKIEJAR = GDAL_HTTP_COOKIEFILE,
  GDAL_MAX_DATASET_POOL_SIZE = NULL,
  GDAL_INGESTED_BYTES_AT_OPEN = NULL,
  CPL_VSIL_CURL_ALLOWED_EXTENSIONS = NULL,
  CPL_VSIL_CURL_USE_HEAD = NULL,
  CPL_VSIL_CURL_CHUNK_SIZE = NULL,
  ...
)

gdal_creation_options(
  output_format = NULL,
  COMPRESS = "DEFLATE",
  PREDICTOR = "2",
  NUM_THREADS =
    as.character(ceiling(vrtility::machine_cores()/pmax(vrtility::n_daemons(), 1))),
  BIGTIFF = "IF_NEEDED",
  TILED = "YES",
  BLOCKXSIZE = "128",
  BLOCKYSIZE = "128",
  COPY_SRC_OVERVIEWS = "YES",
  ...
)

gdalwarp_options(
  multi = FALSE,
  warp_memory = "50\%",
  num_threads =
    as.character(ceiling(vrtility::machine_cores()/pmax(vrtility::n_daemons(), 1))),
  unified_src_nodata = c("NO", "YES", "PARTIAL")
)

set_gdal_config(x, scope = c("gdalraster", "sys"))

set_gdal_cache_max(mem_fraction = 0.1)

gdal_raster_drivers(shortname = FALSE)

check_muparser()
}
\arguments{
\item{VSI_CACHE}{Should the Virtual File System (VSI) cache be used?}

\item{VSI_CACHE_SIZE}{Size of the VSI cache in bytes.}

\item{GDAL_NUM_THREADS}{Number of threads to use for processing.
Default is the number of available cores divided by the number of daemons.}

\item{GDAL_DISABLE_READDIR_ON_OPEN}{Disable directory listing on open?}

\item{CPL_VSIL_CURL_CACHE_SIZE}{Cache size for HTTP requests.}

\item{GDAL_HTTP_MAX_RETRY}{Maximum number of retries for HTTP requests.}

\item{GDAL_HTTP_RETRY_DELAY}{Delay between retries in seconds.}

\item{GDAL_HTTP_MULTIPLEX}{Use HTTP multiplexing?}

\item{GDAL_HTTP_VERSION}{HTTP version to use.}

\item{GDAL_HTTP_MERGE_CONSECUTIVE_RANGES}{Merge consecutive ranges in HTTP
requests?}

\item{GDAL_HTTP_COOKIEFILE}{Path to the cookie file for HTTP requests.}

\item{GDAL_HTTP_COOKIEJAR}{Path to the cookie jar for HTTP requests.}

\item{GDAL_MAX_DATASET_POOL_SIZE}{Maximum size of the dataset pool.}

\item{GDAL_INGESTED_BYTES_AT_OPEN}{Number of bytes to read at open.}

\item{CPL_VSIL_CURL_ALLOWED_EXTENSIONS}{Allowed file extensions for HTTP
requests.}

\item{CPL_VSIL_CURL_USE_HEAD}{Use HTTP HEAD requests?}

\item{CPL_VSIL_CURL_CHUNK_SIZE}{Chunk size for HTTP requests.}

\item{...}{Additional -co options to set}

\item{output_format}{Output format equivalent to -of on the CLI. see details}

\item{COMPRESS}{Compression method}

\item{PREDICTOR}{Prediction method}

\item{NUM_THREADS}{Number of threads}

\item{BIGTIFF}{Use BigTIFF}

\item{TILED}{Use tiling}

\item{BLOCKXSIZE}{Block size in X}

\item{BLOCKYSIZE}{Block size in Y}

\item{COPY_SRC_OVERVIEWS}{Copy source overviews}

\item{multi}{Logical indicating whether to use multi-threading, equivalent
to -multi on the CLI}

\item{warp_memory}{Memory to use for warping equivalent to -wm on the CLI}

\item{num_threads}{Number of threads to use for warping equivalent to -wo
NUM_THREADS on the CLI. "ALL_CPUS" (the default) will use all available CPUs,
alternartively an integer can be supplied - or NULL to use a single threaded
process.}

\item{unified_src_nodata}{Unified source nodata option equivalent to -wo
UNIFIED_SRC_NODATA on the CLI. Can be "NO", "YES" or "PARTIAL". Default is
"NO" (as was the deafault for earlier versions of GDAL).}

\item{x}{A named character vector of the configuration options}

\item{scope}{A character vector of the scope to set the options in. Either
"gdalraster" or "sys".}

\item{mem_fraction}{Fraction of total RAM to use for GDAL cache, default is
0.1 (10\% of total RAM)}

\item{shortname}{Logical indicating whether to return the short names of the
drivers (default is FALSE)}
}
\value{
Character vector of options

set_gdal_cache_max returns (invisibly), a
\code{\link[memuse]{memuse}} object - the value set for GDAL_CACHEMAX

A character vector of GDAL raster driver shortnames if
\code{shortname = TRUE}, otherwise a data frame with the full driver
information.

TRUE if muparser is available, FALSE otherwise
}
\description{
This function sets GDAL configuration options that can be used to
control the behavior of GDAL operations. These options can be used to optimize
performance, control caching, and manage HTTP requests (among other things)
}
\details{
Where a named argument is set to \code{NULL}, the default GDAL value will be used.
These arguments are currently included as NULL because they could in theory
improve performance but, from our limited testing they either have no or
a negative impact on performance.

output_format, equaivalent to \code{-of} from the gdaltranslate or gdalwarp CLIs.
If NULL, then the output format will be inferred from the file extension.

set_gdal_cache_max is a very thin wrapper around
\code{\link[gdalraster]{set_cache_max}} that allows you to conveniently
set the GDAL_CACHEMAX option as a fraction of the total RAM on your system.

check_muparser can be used to check if the installed gdal version was built
with muparser support; muparser is required for derived bands using
\code{\link{vrt_derived_block}}.
}
\examples{
gdal_config_opts(GDAL_HTTP_USERPWD = "user:password")
gdal_creation_options(COMPRESS = "JPEG", JPEG_QUALITY = "90")
gdalwarp_options(multi = TRUE, warp_memory = "50\%", num_threads = 4)
set_gdal_config(gdal_config_opts())
gcm <- set_gdal_cache_max(0.05)
print(gcm)
}
\seealso{
\href{https://gdal.org/en/stable/user/configoptions.html}{GDAL Configuration Options}

\href{https://gdal.org/en/stable/drivers/raster/index.html#raster-drivers}{GDAL Raster Drivers}

\href{https://gdal.org/en/stable/programs/gdalwarp.html}{GDAL Warp Options}
}
