% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vrt-collect.R
\name{vrt_collect}
\alias{vrt_collect}
\alias{vrt_collect.character}
\alias{vrt_collect.doc_items}
\alias{print.vrt_collection}
\alias{c.vrt_collection}
\title{Construct the base VRT object for composing VRT pipelines.}
\usage{
vrt_collect(x, config_opts, bands, band_descriptions, datetimes)

\method{vrt_collect}{character}(
  x,
  config_opts = gdal_config_opts(),
  bands = NULL,
  band_descriptions = NULL,
  datetimes = rep("", length(x))
)

\method{vrt_collect}{doc_items}(x, config_opts = gdal_config_opts(), ...)

\method{print}{vrt_collection}(x, xml = FALSE, pixfun = FALSE, maskfun = FALSE, blocks = FALSE, ...)

\method{c}{vrt_collection}(x, ...)
}
\arguments{
\item{x}{An object to be used to create a vrt_x object see details.}

\item{config_opts}{A named character vector of GDAL configuration options.}

\item{bands}{A numeric vector of band indices to include in the VRT
collection}

\item{band_descriptions}{A character vector of band descriptions.}

\item{datetimes}{A character vector of datetimes.}

\item{...}{In the case of \code{c}, additional vrt_collection objects to
concatenate to \code{x}. Otherwise, additional arguments to pass to the method or
unused.}

\item{xml}{logical indicating whether to print the XML of the VRT collection.}

\item{pixfun}{logical indicating whether to print the pixel function.}

\item{maskfun}{logical indicating whether to print the mask function.}

\item{blocks}{A logical indicating whether to print the blocks instead of
the collection summary.}
}
\value{
A vrt_collection object.
}
\description{
Construct the base VRT object for composing VRT pipelines.
}
\details{
The main way to create a vrt_collection object, which forms
the basis of the vrrt-based pipelines in vrtility is using a doc_items
object from the \code{rstac} package. For more info on how to create a doc_items
object see \code{\link[=stac_query]{stac_query()}}. To build a vrt_stack object a
vrt_collection is required first. The vrt_collection object is essentially a
list of VRT files. At this stage no alignment is carried out -  and the
rasters are virtualised as-is. In this state, we can apply masks, for example
and when summarisation is required we can use vrt_stack - however, in order
to create a stack the collection must contain images from a single spatial
reference system (SRS). If there are mutliple SRS values, use \code{vrt_warp()}
to unify the projection of the collection (This is almost always a good idea
anyway).

We can also create a VRT collection from a set of files. This is useful when
we have the data on disk or as a downstream step after first processing a
stac collection.

You can use the \code{c} method to combine multiple vrt_collection objects. All
collections must have the same number of bands.
}
\examples{
s2files <- fs::dir_ls(system.file("s2-data", package = "vrtility"))
vrt_collect(s2files)

# we can also combine multiple vrt collections
c(vrt_collect(s2files[1:2]), vrt_collect(s2files[3:4]))

\dontshow{if (interactive()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
s2q <- sentinel2_stac_query(
 bbox = c(-12.386, -37.214, -12.186, -37.014),
 start_date = "2023-01-01",
 end_date = "2023-01-31",
 max_cloud_cover = 10,
 assets = c("B02", "B03", "B04", "B08", "SCL")
)

vrt_collect(s2q)
\dontshow{\}) # examplesIf}
}
