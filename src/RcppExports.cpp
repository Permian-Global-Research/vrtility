// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// extract_band_matrices_cpp
List extract_band_matrices_cpp(List x, IntegerVector row_indices, IntegerVector col_indices, int n_cells, int n_timepoints, int n_bands);
RcppExport SEXP _vrtility_extract_band_matrices_cpp(SEXP xSEXP, SEXP row_indicesSEXP, SEXP col_indicesSEXP, SEXP n_cellsSEXP, SEXP n_timepointsSEXP, SEXP n_bandsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type row_indices(row_indicesSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type col_indices(col_indicesSEXP);
    Rcpp::traits::input_parameter< int >::type n_cells(n_cellsSEXP);
    Rcpp::traits::input_parameter< int >::type n_timepoints(n_timepointsSEXP);
    Rcpp::traits::input_parameter< int >::type n_bands(n_bandsSEXP);
    rcpp_result_gen = Rcpp::wrap(extract_band_matrices_cpp(x, row_indices, col_indices, n_cells, n_timepoints, n_bands));
    return rcpp_result_gen;
END_RCPP
}
// restructure_cells_cpp
NumericVector restructure_cells_cpp(List cell_vals);
RcppExport SEXP _vrtility_restructure_cells_cpp(SEXP cell_valsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type cell_vals(cell_valsSEXP);
    rcpp_result_gen = Rcpp::wrap(restructure_cells_cpp(cell_vals));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_vrtility_extract_band_matrices_cpp", (DL_FUNC) &_vrtility_extract_band_matrices_cpp, 6},
    {"_vrtility_restructure_cells_cpp", (DL_FUNC) &_vrtility_restructure_cells_cpp, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_vrtility(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
